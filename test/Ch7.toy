struct Struct {
  var a;
  var b;
}

struct Struct1 {
  Struct a;
  Struct b;
}

# User defined generic function may operate on struct types as well.
def multiply_transpose(Struct1 value) {
  # We can access the elements of a struct via the '.' operator.
  return transpose(value.a.a * value.b.a) * transpose(value.b.b * value.a.b);
}

def main() {
  # We initialize struct values using a composite initializer.
  Struct value = {{[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [7,   8,  9]]},
                  {[[6, 5, 4], [3, 2, 1]], [[9, 8, 7], [12, 11, 10]]}};

  # We pass these arguments to functions like we do with variables.
  var c = multiply_transpose(value);
  print(c);
}